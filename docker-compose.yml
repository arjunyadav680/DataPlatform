
services:
  # PostgreSQL Database (only runs with --profile internaldb)
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: ERPStoreDb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles: ["internaldb"]

  # Web application (use prebuilt image, not build)
  web:
    image: ${IMAGE_NAME:-dataplatform-app:latest}
    # Note: do not keep `depends_on: - db` here (omitted) so compose works
    # both when db is present (internal mode) and when db is skipped (external mode).
    environment:
      # runtime / ASP.NET
      DOTNET_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: "http://+:80"
      ASPNETCORE_PATHBASE: ${ASPNETCORE_PATHBASE:-/app}

      # Application toggle - keep for app logic if you use it
      Database__UseInternalDb: "${USE_INTERNAL_DB:-true}"

      # Final connection string variable your app will read (override appsettings)
      # when using internal DB, this should point to `db`. When external, set to remote host.
      ConnectionStrings__Postgres: ${CONNECTION_STRING_POSTGRES:-"Host=db;Port=5432;Database=ERPStoreDb;Username=postgres;Password=root"}
    ports:
      - "8080:80"
    restart: unless-stopped

volumes:
  pgdata:
